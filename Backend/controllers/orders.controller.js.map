{"version":3,"file":"orders.controller.js","sourceRoot":"","sources":["orders.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import * as express from 'express';\nimport * as database from '../database';\nimport * as config from \"../config.json\";\nimport * as expressJwt from 'express-jwt'\nimport {fromHeaderOrQuerystring} from \"../jwt-utilty\";\nimport _ = require('lodash');\n\nmodule Route {\n    export class OrdersController {\n        get routes(): express.Router {\n            const router = express.Router();\n            router.get('/:idOrder/products', this.getOrderProducts.bind(this.getOrderProducts));\n            router.get('', this.getAllOrders.bind(this.getAllOrders));\n            router.post('', this.createOrder.bind(this.createOrder));\n            return router;\n        }\n\n        createOrder(req: express.Request, res: express.Response) {\n            database.connection.query(`INSERT INTO \\`order\\` (idPersonReceiving, \n            idPaymentMethod, order_status, tracking_number, creation_date, modification_date, invoice)\n             VALUES (NULL, NULL, '', '', NOW(), NOW(), NULL)`, (err, results) => {\n                if (err) {\n                    console.error(err);\n                    res.status(400).send({});\n                    return;\n                }\n                let counter = 0;\n                for (let i = 0; i < req.body.products.length; i++) {\n                    const product = req.body.products[i];\n                    database.connection.query(`INSERT INTO contains_product (idOrder, idProduct, quantity) \n                    VALUES(?, ?, ?)`, [results.insertId, product.idProduct, product.quantity], (err1, results1) => {\n                       if (err1) {\n                           console.error(err1);\n                           return;\n                       }\n                       counter++;\n                       if (counter === req.body.products.length) {\n                           res.send(200).send({});\n                       }\n                    });\n                }\n            });\n        }\n\n        getOrderProducts(req: express.Request, res: express.Response) {\n            database.connection.query(`select quantity, p.idProduct, mercadolibre_id as meliId, stock, name, hp.price\nfrom \\`order\\` inner join contains_product cp on \\`order\\`.idOrder = cp.idOrder\ninner join product p on cp.idProduct = p.idProduct\ninner join have_product hp on p.idProduct = hp.idProduct where cp.idOrder = ?`, [req.params.idOrder], (err, results) => {\n                res.status(200).send(results);\n            })\n        }\n\n        getAllOrders(req: express.Request, res: express.Response) {\n            database.connection.query(`select idOrder, creation_date as creationDate, modification_date as modificationDate\nfrom \\`order\\``, (err, results) => {\n                if (err) {\n                    res.status(400).send({});\n                    return;\n                }\n                res.status(200).send(results);\n            });\n        }\n\n        modifyOrder(req: express.Request, res: express.Response) {\n\n        }\n\n        deleteOrder(req: express.Request, res: express.Response) {\n            database.connection.query('DELETE * FROM orders where orderId = ?', [req.params.id], (err, result) => {\n                if (err) {\n                    res.status(400).send({});\n                    return;\n                }\n                res.status(200).send({});\n            });\n        }\n    }\n\n}\n\nexport = Route;\n"]}